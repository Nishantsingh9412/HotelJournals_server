{"version":3,"file":"static/js/759.bcd76f9f.chunk.js","mappings":"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","sources":["redux/actions/userProfile/userCertificates.js","components/User_profile/UserCertifications.jsx"],"sourcesContent":["import * as api from '../../../api/index.js';\r\n\r\nexport const setCertificatesAction = (certificatedData) => async(dispatch) => {\r\n    try{\r\n        const {data} = await api.setUserCertification(certificatedData);\r\n        dispatch({type:'SET_USER_CERTIFICATES',data});\r\n        return {success:true,message:'Certificate Added Successfully'}\r\n    }catch(error){\r\n        console.log(\"Error from setCertificatesAction \", error.message)\r\n        return {success:false,message:'Error in adding Certificates'}\r\n    }\r\n}\r\n\r\nexport const getCertificatesAction = (id) => async(dispatch) => {\r\n    try{\r\n        const {data} = await api.getUserCertification(id);\r\n        dispatch({type:'GET_USER_CERTIFICATES',data});\r\n        return {success:true,message:'Certificates Fetched Successfully'}\r\n    }catch(error){\r\n        console.log(\"Error from getCertificatesAction \", error.message)\r\n        return {success:false,message:'Error in getting Certificates'}\r\n    }\r\n}\r\n\r\nexport const updateCertificateAction = (id,certificateData) => async(dispatch) => {\r\n    try{\r\n        const {data} = await api.updateUserCertification(id,certificateData);\r\n        dispatch({type:'UPDATE_USER_CERTIFICATES',data});\r\n        return {success:true,message:'Certificates Updated Successfully'}\r\n    }catch(error){\r\n        console.log(\"Error from updateCertificateAction \", error.message)\r\n        return {success:false,message:'Error in updating Certificates'}\r\n    }\r\n}\r\n\r\nexport const deleteCertificateAction = (id) => async(dispatch) => {\r\n    try{\r\n        await api.deleteCertification(id);\r\n        return {success:true,message:'Certificate Deleted Successfully'}\r\n    }catch(error){\r\n        console.log(\"Error from deleteCertificateAction \", error.message)\r\n        return {success:false,message:'Error in deleting Certificates'}\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\n// React Bootstrap\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { Button } from 'react-bootstrap';\r\n// Loader\r\nimport PuffLoader from \"react-spinners/PuffLoader\";\r\n\r\n// Toaster\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n// react icons \r\nimport { FaPencil } from \"react-icons/fa6\";\r\nimport { PiCertificateDuotone, PiPencil } from \"react-icons/pi\";\r\nimport { CiSquarePlus } from \"react-icons/ci\";\r\nimport { FaExternalLinkAlt } from \"react-icons/fa\";\r\n\r\nimport PrCss from './userProfile.module.css';\r\nimport { deleteCertificateAction, getCertificatesAction, setCertificatesAction, updateCertificateAction } from '../../redux/actions/userProfile/userCertificates';\r\nimport { RxPencil1 } from 'react-icons/rx';\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n\r\n    const { id } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [certificate_name, setCertificateName] = useState('');\r\n    const [issued_by, setIssuedBy] = useState('');\r\n    const [issued_on_month, setIssuedOnMonth] = useState('');\r\n    const [issued_on_year, setIssuedOnYear] = useState('');\r\n    // const [expiration_month, setExpirationMonth] = useState('');\r\n    // const [expiration_year, setExpirationYear] = useState('');\r\n    const [credential_id, setCredentialId] = useState('');\r\n    const [credential_url, setCredentialUrl] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const isValidUrl = (url) => {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!pattern.test(url);\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    const years = Array.from({ length: currentYear - 1920 }, (_, i) => currentYear - i);\r\n    const years2 = Array.from({ length: (currentYear + 20) - 1920 }, (_, i) => (currentYear + 20) - i);\r\n\r\n\r\n    const handleAddCertification = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!certificate_name || !issued_by || !issued_on_month || !issued_on_year) {\r\n            return toast.error('Please fill mandatory fields');\r\n        }\r\n        // if (parseInt(issued_on_year) > parseInt(expiration_year)) {\r\n        //     return toast.error('Expiration year should be less than issued year')\r\n        // }\r\n        // if(parseInt(issued_on_year) === parseInt(expiration_year) || ){\r\n\r\n        if (credential_url && !isValidUrl(credential_url)) {\r\n            return toast.error('Please enter a valid URL');\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const certificateData = {\r\n            certificate_name: certificate_name,\r\n            issued_by: issued_by,\r\n            issue_month: issued_on_month,\r\n            issue_year: issued_on_year,\r\n            // expiration_month: expiration_month,\r\n            // expiration_year: expiration_year,\r\n            credential_id: credential_id,\r\n            credential_url: credential_url,\r\n            userId: id\r\n        }\r\n\r\n        const response = await dispatch(setCertificatesAction(certificateData))\r\n        if (response.success) {\r\n            const respo2 = await dispatch(getCertificatesAction(id))\r\n            if (respo2) {\r\n                props.onHide();\r\n            } else {\r\n                toast.info('Please referesh the page to see changes');\r\n            }\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={props.onHide}\r\n        >\r\n            <Modal.Header\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n                closeButton\r\n            >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\"\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n\r\n                    }}\r\n                >\r\n                    <PiCertificateDuotone size={'25'} />\r\n                    <h5 className='mt-2'>\r\n                        {/* Add Liscence and certification */}\r\n                        Añade tus licencias o certificaciones\r\n                    </h5>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h6><b> Wow the recruiters </b></h6> */}\r\n                {/* <p> */}\r\n                {/* Imagine that you're meeting the CEO of your dream company. What should you say to amaze them? */}\r\n                {/* </p> */}\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"certificate_name\">\r\n                            {/* Certificate Name */}\r\n                            Nombre del certificado &nbsp;\r\n                            <small className='text-danger'>*</small>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setCertificateName(e.target.value)}\r\n                            id=\"certificate_name\"\r\n                            // placeholder=\"Enter Certificate Name\"\r\n                            placeholder='Escribe el nombre de tu título '\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"issued_by\">\r\n                            {/* Issued By */}\r\n                            Emitido por\r\n                            <small className='text-danger'> * </small>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            onChange={(e) => setIssuedBy(e.target.value)}\r\n                            id=\"issued_by\"\r\n                            // placeholder=\"Enter Issuing organization name\"\r\n                            placeholder='Escribe el nombre de la organización'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"issue_on\">\r\n                            {/* Issued on */}\r\n                            Emitido el\r\n                            <small className='text-danger'>*</small>\r\n                        </label>\r\n                        <div className=\"form-group row\">\r\n                            <div className='form-group col-md-6'>\r\n                                <select\r\n                                    className='form-control'\r\n                                    onChange={(e) => setIssuedOnMonth(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        {/* Month */}\r\n                                        Mes\r\n                                    </option>\r\n                                    <option value=\"January\">January</option>\r\n                                    <option value=\"February\">February</option>\r\n                                    <option value=\"March\">March</option>\r\n                                    <option value=\"April\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"June\">June</option>\r\n                                    <option value=\"July\">July</option>\r\n                                    <option value=\"August\">August</option>\r\n                                    <option value=\"September\">September</option>\r\n                                    <option value=\"October\">October</option>\r\n                                    <option value=\"November\">November</option>\r\n                                    <option value=\"December\">December</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <select\r\n                                    className='form-control'\r\n                                    onChange={(e) => setIssuedOnYear(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        {/* Year */}\r\n                                        Año\r\n                                    </option>\r\n                                    {years.map((year) =>\r\n                                        <option key={year} value={year}>{year}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div>\r\n                        <label htmlFor=\"expired_on\">Expired on</label>\r\n                        <div className='row'>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <select\r\n                                    className='form-control'\r\n                                    onChange={(e) => setExpirationMonth(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        \r\n                                        Mes\r\n                                    </option>\r\n                                    <option value=\"January\">January</option>\r\n                                    <option value=\"February\">February</option>\r\n                                    <option value=\"March\">March</option>\r\n                                    <option value=\"April\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"June\">June</option>\r\n                                    <option value=\"July\">July</option>\r\n                                    <option value=\"August\">August</option>\r\n                                    <option value=\"September\">September</option>\r\n                                    <option value=\"October\">October</option>\r\n                                    <option value=\"November\">November</option>\r\n                                    <option value=\"December\">December</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <select\r\n                                    className='form-control'\r\n                                    onChange={(e) => setExpirationYear(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        \r\n                                        Año\r\n                                    </option>\r\n                                    {years2.map((year) =>\r\n                                        <option key={year} value={year}>{year}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"credential_id\">\r\n                            {/* Credential ID */}\r\n                            Número de registro de título\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"credential_id\"\r\n                            onChange={(e) => setCredentialId(e.target.value)}\r\n                            // placeholder=\"Enter Credential ID\"\r\n                            placeholder='Escribe el número de registro de tu título'\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"credential_url\">\r\n                            {/* Credential URL */}\r\n                            URL del Título\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"credential_url\"\r\n                            onChange={(e) => setCredentialUrl(e.target.value)}\r\n                            // placeholder=\"Enter Credential URL\"\r\n                            placeholder='Escribe la URL de tu título'\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={(event) => { event.stopPropagation(); props.onHide(); }} className='btn btn-secondary'>\r\n                    {/* Close */}\r\n                    Cerrar\r\n                </Button>\r\n                <Button onClick={handleAddCertification}>\r\n                    {loading ? <>\r\n                        <div className='d-flex'>\r\n                            <PuffLoader\r\n                                size={25}\r\n                                color=\"#ffffff\"\r\n                            /> <span className='pl-2'>  </span>\r\n                        </div>\r\n                    </> :\r\n                        // 'Save'\r\n                        'Guardar'\r\n\r\n                    }\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nfunction MyVerticallyCenteredModalEditCertification(props) {\r\n\r\n    const { id } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const editId = props.editid;\r\n    const delId = props.delid;\r\n    const [loadingdel, setLoadingDel] = useState(false);\r\n    const [certificate_name, setCertificateName] = useState('');\r\n    const [issued_by, setIssuedBy] = useState('');\r\n    const [issued_on_month, setIssuedOnMonth] = useState('');\r\n    const [issued_on_year, setIssuedOnYear] = useState('');\r\n    // const [expiration_month, setExpirationMonth] = useState('');\r\n    // const [expiration_year, setExpirationYear] = useState('');\r\n    const [credential_id, setCredentialId] = useState('');\r\n    const [credential_url, setCredentialUrl] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const isValidUrl = (url) => {\r\n        const pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n            '(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n        return !!pattern.test(url);\r\n    }\r\n\r\n    const currentYear = new Date().getFullYear();\r\n    const years = Array.from({ length: currentYear - 1920 }, (_, i) => currentYear - i);\r\n    const years2 = Array.from({ length: (currentYear + 20) - 1920 }, (_, i) => (currentYear + 20) - i);\r\n    const allcertificates = props?.certificatedata;\r\n    const certificate = allcertificates?.filter((certificate) => certificate._id === editId)[0];\r\n\r\n    useEffect(() => {\r\n        if (certificate) {\r\n            setCertificateName(certificate?.certificate_name);\r\n            setIssuedBy(certificate?.issued_by);\r\n            setIssuedOnMonth(certificate?.issue_month);\r\n            setIssuedOnYear(certificate?.issue_year);\r\n            // setExpirationMonth(certificate?.expiration_month);\r\n            // setExpirationYear(certificate?.expiration_year);\r\n            setCredentialId(certificate?.credential_id);\r\n            setCredentialUrl(certificate?.credential_url);\r\n        }\r\n    }, [certificate])\r\n\r\n    const handleEditCertification = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!certificate_name || !issued_by || !issued_on_month || !issued_on_year) {\r\n            return toast.error('Please fill mandatory fields');\r\n        }\r\n        // if (parseInt(issued_on_year) > parseInt(expiration_year)) {\r\n        //     return toast.error('Expiration year should be less than issued year')\r\n        // }\r\n        // if(parseInt(issued_on_year) === parseInt(expiration_year) || ){\r\n\r\n        if (credential_url && !isValidUrl(credential_url)) {\r\n            return toast.error('Please enter a valid URL');\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const certificateData = {\r\n            certificate_name: certificate_name,\r\n            issued_by: issued_by,\r\n            issue_month: issued_on_month,\r\n            issue_year: issued_on_year,\r\n            // expiration_month: expiration_month,\r\n            // expiration_year: expiration_year,\r\n            credential_id: credential_id,\r\n            credential_url: credential_url,\r\n        }\r\n\r\n        const response = await dispatch(updateCertificateAction(editId, certificateData))\r\n        if (response.success) {\r\n            const respo2 = await dispatch(getCertificatesAction(id))\r\n            if (respo2) {\r\n                props.onHide();\r\n            } else {\r\n                toast.info('Please referesh the page to see changes');\r\n            }\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const handledeletecertificates = async (e) => {\r\n        e.preventDefault();\r\n        setLoadingDel(true);\r\n        const response = await dispatch(deleteCertificateAction(delId))\r\n        if (response.success) {\r\n            const respo2 = await dispatch(getCertificatesAction(id))\r\n            if (respo2) {\r\n                props.onHide();\r\n            } else {\r\n                toast.info('Please referesh the page to see changes');\r\n            }\r\n        }\r\n        setLoadingDel(false);\r\n    }\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            onHide={props.onHide}\r\n        >\r\n            <Modal.Header\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                }}\r\n                closeButton\r\n            >\r\n                <Modal.Title id=\"contained-modal-title-vcenter\"\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n\r\n                    }}\r\n                >\r\n                    <PiCertificateDuotone size={'25'} />\r\n\r\n                    <h5 className='mt-2'>\r\n                        {/* Add Liscence and certification */}\r\n                        Añade tus licencias o certificaciones\r\n                    </h5>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {/* <h6><b> Wow the recruiters </b></h6> */}\r\n                {/* <p> */}\r\n                {/* Imagine that you're meeting the CEO of your dream company. What should you say to amaze them? */}\r\n                {/* </p> */}\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"certificate_name\">\r\n                            {/* Certificate Name */}\r\n                            Nombre del certificado\r\n                            <small className='text-danger'>*</small>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={certificate_name}\r\n                            onChange={(e) => setCertificateName(e.target.value)}\r\n                            id=\"certificate_name\"\r\n                            // placeholder=\"Enter Certificate Name\"\r\n                            placeholder='Escribe el nombre de tu título'\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"issued_by\">\r\n                            {/* Issued By */}\r\n                            Emitido por\r\n                            <small className='text-danger'>*</small>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={issued_by}\r\n                            onChange={(e) => setIssuedBy(e.target.value)}\r\n                            id=\"issued_by\"\r\n                            // placeholder=\"Enter Issuing organization name\"\r\n                            placeholder=' Escribe el nombre de la organización'\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"issue_on\">\r\n                            {/* Issued on */}\r\n                            Emitido el\r\n                            <small className='text-danger'>*</small>\r\n                        </label>\r\n                        <div className=\"form-group row\">\r\n                            <div className='form-group col-md-6'>\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={issued_on_month}\r\n                                    onChange={(e) => setIssuedOnMonth(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        {/* Month */}\r\n                                        Mes\r\n                                    </option>\r\n                                    <option value=\"January\">January</option>\r\n                                    <option value=\"February\">February</option>\r\n                                    <option value=\"March\">March</option>\r\n                                    <option value=\"April\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"June\">June</option>\r\n                                    <option value=\"July\">July</option>\r\n                                    <option value=\"August\">August</option>\r\n                                    <option value=\"September\">September</option>\r\n                                    <option value=\"October\">October</option>\r\n                                    <option value=\"November\">November</option>\r\n                                    <option value=\"December\">December</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={issued_on_year}\r\n                                    onChange={(e) => setIssuedOnYear(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        {/* Year */}\r\n                                        Año\r\n                                    </option>\r\n                                    {years.map((year) =>\r\n                                        <option key={year} value={year}>{year}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* <div>\r\n                        <label htmlFor=\"expired_on\">\r\n                            Expired on\r\n                        </label>\r\n                        <div className='row'>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={expiration_month}\r\n                                    onChange={(e) => setExpirationMonth(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        Mes\r\n                                    </option>\r\n                                    <option value=\"January\">January</option>\r\n                                    <option value=\"February\">February</option>\r\n                                    <option value=\"March\">March</option>\r\n                                    <option value=\"April\">April</option>\r\n                                    <option value=\"May\">May</option>\r\n                                    <option value=\"June\">June</option>\r\n                                    <option value=\"July\">July</option>\r\n                                    <option value=\"August\">August</option>\r\n                                    <option value=\"September\">September</option>\r\n                                    <option value=\"October\">October</option>\r\n                                    <option value=\"November\">November</option>\r\n                                    <option value=\"December\">December</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <select\r\n                                    className='form-control'\r\n                                    value={expiration_year}\r\n                                    onChange={(e) => setExpirationYear(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">\r\n                                        Año\r\n                                    </option>\r\n                                    {years2.map((year) =>\r\n                                        <option key={year} value={year}>{year}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"credential_id\">\r\n                            {/* Credential ID */}\r\n                            Número de registro de título\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"credential_id\"\r\n                            value={credential_id}\r\n                            onChange={(e) => setCredentialId(e.target.value)}\r\n                            // placeholder=\"Enter Credential ID\"\r\n                            placeholder='Escribe el número de registro de tu título'\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"credential_url\">\r\n                            {/* Credential URL */}\r\n                            URL del Título\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={credential_url}\r\n                            id=\"credential_url\"\r\n                            onChange={(e) => setCredentialUrl(e.target.value)}\r\n                            // placeholder=\"Enter Credential URL\"\r\n                            placeholder='Escribe la URL de tu título'\r\n                        />\r\n                    </div>\r\n                </form>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={(event) => { event.stopPropagation(); props.onHide(); }} className='btn btn-secondary'>\r\n                    {/* Close */}\r\n                    Cerrar\r\n                </Button>\r\n                <Button onClick={handledeletecertificates} className='btn btn-danger' >\r\n                    {loadingdel ?\r\n                        <>\r\n                            <div className='d-flex'>\r\n                                <PuffLoader\r\n                                    size={25}\r\n                                    color=\"#ffffff\"\r\n                                />\r\n                                <span className='pl-2'> </span>\r\n                            </div>\r\n                        </> :\r\n                        // 'Remove Certificate'\r\n                        'Eliminar certificado'\r\n                    }\r\n                </Button>\r\n                <Button onClick={handleEditCertification}>\r\n                    {loading ? <>\r\n                        <div className='d-flex'>\r\n                            <PuffLoader\r\n                                size={25}\r\n                                color=\"#ffffff\"\r\n                            /> <span className='pl-2'> </span>\r\n                        </div>\r\n                    </> :\r\n                        // 'Save'  \r\n                        'Guardar'\r\n                    }\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\nconst UserCertifications = () => {\r\n    const { id } = useParams();\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [editId, setEditId] = useState(null);\r\n    const [delId, setDelId] = useState(null);\r\n    const [modalShowEdit, setModalShowEdit] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getCertificatesAction(id))\r\n    }, [])\r\n\r\n    const allcertificates = useSelector((state) => state.getCertificatesReducer);\r\n    const allcertificatesData = allcertificates?.data?.result;\r\n    console.log(allcertificatesData);\r\n\r\n\r\n\r\n    return (\r\n        <div id='liscencescroll'>\r\n            <ToastContainer />\r\n            {(allcertificatesData?.length === 0 || allcertificatesData === undefined) ?\r\n                <>\r\n                    <div className={` ${PrCss.addSections}`} onClick={() => setModalShow(true)} style={{ cursor: 'pointer' }}>\r\n                        <div className=\"card w-100\">\r\n                            <div className=\"card-body text-center\">\r\n                                <i className='fa-solid fa-plus'></i>\r\n                                <p className='card-text'>\r\n                                    {/* Add Liscence or Certifications */}\r\n                                    Añade tus licencias o certificaciones\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </> :\r\n                <>\r\n                    <div className=\"card-body mt-3 mb-0 pb-0\">\r\n                        <div className='row justify-content-between ml-2 mr-2'>\r\n                            <h5 className=\"card-title\">\r\n                                {/* Licenses & certifications */}\r\n                                Licencias y certificaciones\r\n                            </h5>\r\n                            <div style={{ cursor: 'pointer' }} onClick={() => setModalShow(true)} >\r\n                                <CiSquarePlus size={'35'} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            width: '50vw',\r\n                            boxShadow: '14px 10px 20px 3px #d3beae',\r\n                            borderRadius: '25px 25px 25px 25px',\r\n                        }}\r\n                    >\r\n                        {allcertificatesData?.map((certificate) => {\r\n                            return (\r\n                                <div class=\"card\"\r\n                                >\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"card-header mt-1\"\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                alignItems: 'center'\r\n                                            }}\r\n                                        >\r\n                                            {certificate.certificate_name}\r\n                                            <div style={{ cursor: 'pointer' }}\r\n                                                onClick={() => {\r\n                                                    setModalShowEdit(true);\r\n                                                    setDelId(certificate._id);\r\n                                                    setEditId(certificate._id);\r\n                                                }}>\r\n                                                <RxPencil1 style={{ marginLeft: '10px' }} />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='ml-2'>\r\n                                            <div className=\"card-text mt-1\">{certificate.issued_by} </div>\r\n                                            {certificate.credential_id ?\r\n                                                <>\r\n                                                    <div className=\"card-text mt-1\">\r\n                                                        {/* Credential ID :  */}\r\n                                                        Número de registro de título : &nbsp;\r\n                                                        {certificate.credential_id}\r\n                                                    </div>\r\n                                                </>\r\n                                                : <></>\r\n                                            }\r\n                                            <div className=\"card-text mt-1\">\r\n                                                <small className='text-muted'>\r\n                                                    {/* Issued  */}\r\n                                                    Emitido \r\n                                                    · &nbsp;\r\n                                                    {certificate.issue_month} {certificate.issue_year}\r\n                                                    {/* {certificate.expiration_month ?\r\n                                                        <> · Expires {certificate.expiration_month}\r\n                                                            {certificate.expiration_year}\r\n                                                        </> \r\n                                                        */}\r\n                                                </small>\r\n                                            </div>\r\n                                            {/* <div className=\"card-text mt-1\">Credential ID 293f3085-8c81-409e-9a91-a2b5a95a17f0</div> */}\r\n\r\n                                            {certificate.credential_url ?\r\n                                                <>\r\n                                                    <a href={`${certificate.credential_url}`}\r\n                                                        target='_blank'\r\n                                                        style={{ textDecoration: 'none' }}\r\n                                                    >\r\n                                                        <button className='btn mt-3' style={{\r\n                                                            backgroundColor: '#e4b49d',\r\n                                                            marginRight: '1vw',\r\n                                                            display: 'flex'\r\n                                                        }}>\r\n                                                            {/* Show credential */}\r\n                                                            Mostrar credencial\r\n                                                            <div className='ml-2 mt-1'>\r\n                                                                <FaExternalLinkAlt />\r\n                                                            </div>\r\n                                                        </button>\r\n                                                    </a>\r\n                                                </>\r\n                                                : <></>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n            />\r\n\r\n\r\n            <MyVerticallyCenteredModalEditCertification\r\n                show={modalShowEdit}\r\n                editid={editId}\r\n                delid={delId}\r\n                onHide={() => setModalShowEdit(false)}\r\n                certificatedata={allcertificatesData}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCertifications\r\n"],"names":["setCertificatesAction","certificatedData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","_yield$api$setUserCer","data","wrap","_context","prev","next","api","sent","type","abrupt","success","message","t0","console","log","stop","_x","apply","arguments","getCertificatesAction","id","_ref2","_callee2","_yield$api$getUserCer","_context2","_x2","updateCertificateAction","certificateData","_ref3","_callee3","_yield$api$updateUser","_context3","_x3","deleteCertificateAction","_ref4","_callee4","_context4","_x4","MyVerticallyCenteredModal","props","useParams","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","certificate_name","setCertificateName","_useState5","_useState6","issued_by","setIssuedBy","_useState7","_useState8","issued_on_month","setIssuedOnMonth","_useState9","_useState10","issued_on_year","setIssuedOnYear","_useState11","_useState12","credential_id","setCredentialId","_useState13","_useState14","credential_url","setCredentialUrl","useDispatch","currentYear","Date","getFullYear","years","Array","from","length","_","i","handleAddCertification","e","preventDefault","toast","error","url","RegExp","test","issue_month","issue_year","userId","onHide","info","_jsxs","Modal","_objectSpread","size","centered","children","_jsx","Header","style","display","justifyContent","closeButton","Title","flexDirection","alignItems","PiCertificateDuotone","className","Body","htmlFor","onChange","target","value","placeholder","map","year","Footer","Button","onClick","event","stopPropagation","_Fragment","PuffLoader","color","MyVerticallyCenteredModalEditCertification","_useState15","_useState16","editId","editid","delId","delid","_useState17","_useState18","loadingdel","setLoadingDel","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","allcertificates","certificatedata","certificate","filter","_id","useEffect","handleEditCertification","handledeletecertificates","_allcertificates$data","_useState31","_useState32","modalShow","setModalShow","_useState33","_useState34","setEditId","_useState35","_useState36","setDelId","_useState37","_useState38","modalShowEdit","setModalShowEdit","useSelector","state","getCertificatesReducer","allcertificatesData","result","ToastContainer","undefined","concat","PrCss","addSections","cursor","CiSquarePlus","width","boxShadow","borderRadius","class","RxPencil1","marginLeft","href","textDecoration","backgroundColor","marginRight","FaExternalLinkAlt","show"],"sourceRoot":""}